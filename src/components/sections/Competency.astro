---
interface Props {
    title: string;
    description: string;
    openDetails: boolean;
}

const { title, description, openDetails } = Astro.props;
---
<details class="my-10 toggleCompetency" open={openDetails}>
    <summary
        class="h-14 bg-primary rounded-sm flex flex-row justify-items-center hover:cursor-pointer"
    >
        <h2 class="text-light md:text-2xl text-xl flex self-center mx-auto pl-3">
            {title}
        </h2>
        <svg
            xmlns="http://www.w3.org/2000/svg"
            class=`self-center mr-3`
            id="openChevron"
            width="24"
            height="24"
            viewBox="-5 -7.5 24 24"
            ><g transform="rotate(180 7 4.5)"
                ><path
                    fill="white"
                    d="m7.071 2.828l-4.95 4.95A1 1 0 0 1 .707 6.364L6.364.707a1 1 0 0 1 1.414 0l5.657 5.657a1 1 0 0 1-1.414 1.414z"
                ></path></g
            ></svg
        >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            class=`self-center mr-3`
            id="closeChevron"
            width="24"
            height="24"
            viewBox="-5 -7.5 24 24"
            ><path
                fill="white"
                d="m7.071 2.828l-4.95 4.95A1 1 0 0 1 .707 6.364L6.364.707a1 1 0 0 1 1.414 0l5.657 5.657a1 1 0 0 1-1.414 1.414z"
            ></path></svg
        >
    </summary>
    <div
        set:html={description}
        class="py-5 px-8 border-opacity-15 border border-dark rounded-b-sm md:text-lg"
    />
</details>
<style>
    details[open] > div {
        animation-name: fadeInDown;
        animation-duration: 0.5s;
    }
    details[open] #closeChevron {
        display: flex;
    }
    details[open] #openChevron {
        display: none;
    }
    details #closeChevron {
        display: none;
    }
    details  #openChevron {
        display: flex;
    }
    details > div {
        transition: height 1s ease;
    }
    details:not([open]) > div {
        height: 0;
    }
    details[open] > div {
        height: auto;
    }

    @keyframes fadeInDown {
        0% {
            opacity: 0;
            transform: translateY(-1.25em);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
